using System;

class Program
{
    private const string CommandAddDossier = "1";
    private const string CommandPrintAllDossiers = "2";
    private const string CommandRemoveDossier = "3";
    private const string CommandSearchByLastName = "4";
    private const string CommandExit = "5";

    private const char NameSeparator = ' ';

    private const int InitialArraySize = 4;
    private const int ArrayExpansionFactor = 2;
    private const int ArrayReductionThreshold = 2;

    static void Main()
    {
        string[] fullNames = Array.Empty<string>();
        string[] positions = Array.Empty<string>();

        bool shouldRun = true;

        while (shouldRun)
        {
            Console.WriteLine("\nМеню:");
            Console.WriteLine($"{CommandAddDossier}. Добавить досье");
            Console.WriteLine($"{CommandPrintAllDossiers}. Вывести все досье");
            Console.WriteLine($"{CommandRemoveDossier}. Удалить досье");
            Console.WriteLine($"{CommandSearchByLastName}. Поиск по фамилии");
            Console.WriteLine($"{CommandExit}. Выход");
            Console.Write("Выберите действие: ");

            string choice = Console.ReadLine();

            switch (choice)
            {
                case CommandAddDossier:
                    AddDossier(ref fullNames, ref positions);
                    break;

                case CommandPrintAllDossiers:
                    PrintAllDossiers(fullNames, positions);
                    break;

                case CommandRemoveDossier:
                    RemoveDossier(ref fullNames, ref positions);
                    break;

                case CommandSearchByLastName:
                    SearchByLastName(fullNames, positions);
                    break;

                case CommandExit:
                    shouldRun = false;
                    break;

                default:
                    Console.WriteLine("Неверный ввод. Попробуйте снова.");
                    break;
            }
        }
    }

    static void AddDossier(ref string[] fullNames, ref string[] positions)
    {
        Console.Write("Введите ФИО сотрудника: ");
        string name = Console.ReadLine();

        Console.Write("Введите должность: ");
        string position = Console.ReadLine();

        if (fullNames.Length == positions.Length && positions.Length == fullNames.Length)
        {
            int newSize = fullNames.Length == 0 ? InitialArraySize : fullNames.Length * ArrayExpansionFactor;
            ResizeAndAdd(ref fullNames, name, newSize);
            ResizeAndAdd(ref positions, position, newSize);
        }
        else
        {
            AddToArray(ref fullNames, name);
            AddToArray(ref positions, position);
        }

        Console.WriteLine("Досье добавлено.");
    }

    static void ResizeAndAdd(ref string[] array, string value, int newSize)
    {
        string[] newArray = new string[newSize];

        for (int i = 0; i < array.Length; i++)
        {
            newArray[i] = array[i];
        }

        newArray[array.Length] = value;
        array = newArray;
    }

    static void AddToArray(ref string[] array, string value)
    {
        string[] newArray = new string[array.Length + 1];

        for (int i = 0; i < array.Length; i++)
        {
            newArray[i] = array[i];
        }

        newArray[array.Length] = value;
        array = newArray;
    }

    static void PrintAllDossiers(string[] fullNames, string[] positions)
    {
        if (fullNames.Length == 0)
        {
            Console.WriteLine("Нет досье для отображения.");
            return;
        }

        for (int i = 0; i < fullNames.Length; i++)
        {
            Console.WriteLine($"{i + 1}) {fullNames[i]} — {positions[i]}");
        }
    }

    static void RemoveDossier(ref string[] fullNames, ref string[] positions)
    {
        if (fullNames.Length == 0)
        {
            Console.WriteLine("Нет досье для удаления.");
            return;
        }

        Console.Write("Введите номер досье для удаления: ");

        if (int.TryParse(Console.ReadLine(), out int index) == false || index < 1 || index > fullNames.Length)
        {
            Console.WriteLine("Неверный номер досье.");
            return;
        }

        index--;

        string[] newFullNames = new string[fullNames.Length - 1];
        string[] newPositions = new string[positions.Length - 1];

        for (int i = 0; i < index; i++)
        {
            newFullNames[i] = fullNames[i];
            newPositions[i] = positions[i];
        }

        for (int i = index + 1; i < fullNames.Length; i++)
        {
            newFullNames[i - 1] = fullNames[i];
            newPositions[i - 1] = positions[i];
        }

        fullNames = newFullNames;
        positions = newPositions;

        if (fullNames.Length > 0 && fullNames.Length == positions.Length / ArrayReductionThreshold)
        {
            ResizeArray(ref fullNames, fullNames.Length);
            ResizeArray(ref positions, positions.Length / ArrayReductionThreshold);
        }

        Console.WriteLine("Досье удалено.");
    }

    static void ResizeArray(ref string[] array, int newSize)
    {
        string[] newArray = new string[newSize];
        int elementsToCopy = Math.Min(array.Length, newSize);

        for (int i = 0; i < elementsToCopy; i++)
        {
            newArray[i] = array[i];
        }

        array = newArray;
    }

    static void SearchByLastName(string[] fullNames, string[] positions)
    {
        if (fullNames.Length == 0)
        {
            Console.WriteLine("Нет досье для поиска.");
            return;
        }

        Console.Write("Введите фамилию для поиска: ");
        string lastName = Console.ReadLine();

        bool isFound = false;

        for (int i = 0; i < fullNames.Length; i++)
        {
            string[] nameParts = fullNames[i].Split(NameSeparator);

            if (nameParts.Length > 0 && nameParts[0].Equals(lastName, StringComparison.OrdinalIgnoreCase))
            {
                Console.WriteLine($"{i + 1}) {fullNames[i]} - {positions[i]}");
                isFound = true;
            }
        }

        if (isFound == false)
        {
            Console.WriteLine("Досье с такой фамилией не найдены.");
        }
    }
}
