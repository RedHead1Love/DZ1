using System;
using System.Collections.Generic;

namespace CardGame
{
    public class Card
    {
        public Card(string suit, string rank)
        {
            Suit = suit;
            Rank = rank;
        }

        public string Suit { get; }
        public string Rank { get; }

        public override string ToString()
        {
            return $"{Rank} — {Suit}";
        }
    }

    public class Deck
    {
        private List<Card> cards;

        public Deck()
        {
            cards = new List<Card>();
            Initialize();
            Shuffle();
        }

        public int RemainingCards => cards.Count;

        private void Initialize()
        {
            string[] suits = { "Черви", "Бубны", "Трефы", "Крести" };
            string[] ranks = { "2", "3", "4", "5", "6", "7", "8", "9", "10", "Валет", "Дама", "Король", "Туз" };

            foreach (var suit in suits)
            {
                foreach (var rank in ranks)
                {
                    cards.Add(new Card(suit, rank));
                }
            }
        }

        public void Shuffle()
        {
            Random random = new Random();

            for (int i = cards.Count - 1; i > 0; i--)
            {
                int randomIndex = random.Next(i + 1);
                Card temp = cards[i];
                cards[i] = cards[randomIndex];
                cards[randomIndex] = temp;
            }
        }

        public Card Draw()
        {
            if (cards.Count == 0)
            {
                throw new InvalidOperationException("Колода пуста");
            }

            Card card = cards[0];
            cards.RemoveAt(0);
            return card;
        }

    }

    public class Player
    {
        private List<Card> _hand;

        public Player()
        {
            _hand = new List<Card>();
        }

        public int Count => _hand.Count;

        public void Add(Card card)
        {
            _hand.Add(card);
        }

        public void Show()
        {
            Console.WriteLine("Карты игрока:");

            foreach (var card in _hand)
            {
                Console.WriteLine(card);
            }
        }
    }

    public class Dealer
    {
        private Deck _deck;
        private Player _player;

        public Dealer(Player player)
        {
            _deck = new Deck();
            _player = player;
        }

        public void Deal(int count)
        {
            if (count <= 0)
            {
                Console.WriteLine("Количество карт должно быть положительным.");
                return;
            }

            if (count > _deck.RemainingCards)
            {
                Console.WriteLine($"Недостаточно карт в колоде. Осталось {_deck.RemainingCards} карт");
                return;
            }

            for (int i = 0; i < count; i++)
            {
                _player.Add(_deck.Draw());
            }
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Добро пожаловать в игру");

            Player player = new Player();
            Dealer dealer = new Dealer(player);

            Console.Write("Введите количество карт для раздачи: ");

            if (int.TryParse(Console.ReadLine(), out int count))
            {
                dealer.Deal(count);
                player.Show();
            }
            else
            {
                Console.WriteLine("Неверный ввод, введите число");
            }

            Console.WriteLine("Нажмите любую кнопку для выхода");
            Console.ReadKey();
        }
    }
}
