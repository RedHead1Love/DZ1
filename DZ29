using System;
using System.Collections.Generic;

namespace CardGame
{
    public class Card
    {
        public Card(string suit, string rank)
        {
            Suit = suit;
            Rank = rank;
        }

        public string Suit { get; }
        public string Rank { get; }

        public override string ToString()
        {
            return $"{Rank} — {Suit}";
        }
    }

    public class Deck
    {
        private List<Card> _cards;
        private readonly Random _random;

        public Deck(Random random)
        {
            _random = random ?? throw new ArgumentNullException(nameof(random));
            _cards = new List<Card>();
            Initialize();
            Shuffle();
        }

        public int RemainingCards => _cards.Count;

        private void Shuffle()
        {
            for (int i = _cards.Count - 1; i >= 0; i--)
            {
                int randomIndex = _random.Next(_cards.Count);
                Card temp = _cards[i];
                _cards[i] = _cards[randomIndex];
                _cards[randomIndex] = temp;
            }
        }

        public Card DrawCard()
        {
            if (_cards.Count == 0)
            {
                throw new InvalidOperationException("Колода пуста");
            }

            Card card = _cards[0];
            _cards.RemoveAt(0);
            return card;
        }

        private void Initialize()
        {
            string[] suits = { "Черви", "Бубны", "Трефы", "Крести" };
            string[] ranks = { "2", "3", "4", "5", "6", "7", "8", "9", "10", "Валет", "Дама", "Король", "Туз" };

            foreach (var suit in suits)
            {
                foreach (var rank in ranks)
                {
                    _cards.Add(new Card(suit, rank));
                }
            }
        }
    }

    public class Player
    {
        private readonly List<Card> _cardsInHand;

        public Player()
        {
            _cardsInHand = new List<Card>();
        }

        public int CardsCount => _cardsInHand.Count;

        public void AddCard(Card card)
        {
            _cardsInHand.Add(card);
        }

        public void ShowCards()
        {
            Console.WriteLine("Карты игрока:");

            foreach (var card in _cardsInHand)
            {
                Console.WriteLine(card);
            }
        }
    }

    public class Dealer
    {
        private readonly Deck _deck;
        private readonly Player _player;

        public Dealer(Player player, Random random)
        {
            _deck = new Deck(random);
            _player = player;
        }

        public void DealCards(int count)
        {
            if (count <= 0)
            {
                Console.WriteLine("Количество карт должно быть положительным.");
                return;
            }

            if (count > _deck.RemainingCards)
            {
                Console.WriteLine($"Недостаточно карт в колоде. Осталось {_deck.RemainingCards} карт");
                return;
            }

            for (int i = 0; i < count; i++)
            {
                _player.AddCard(_deck.DrawCard());
            }
        }
    }

    public static class GameUtils
    {
        public static int ReadNumberInput(string prompt)
        {
            Console.Write(prompt);

            while (true)
            {
                if (int.TryParse(Console.ReadLine(), out int result))
                {
                    return result;
                }

                Console.WriteLine("Неверный ввод, введите число");
            }
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Добро пожаловать в игру");

            var random = new Random();
            Player player = new Player();
            Dealer dealer = new Dealer(player, random);

            int count = GameUtils.ReadNumberInput("Введите количество карт для раздачи: ");

            dealer.DealCards(count);
            player.ShowCards();

            Console.WriteLine("Нажмите любую клавишу для выхода");
            Console.ReadKey();
        }
    }
}
