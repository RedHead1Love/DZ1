using System;
using System.Collections.Generic;

class Program
{
    static void Main(string[] args)
    {
        Zoo zoo = new Zoo();
        zoo.Run();
    }
}

class Zoo
{
    const string CommandExit = "0";

    private List<Enclosure> _enclosures;
    private bool _isRunning;

    public Zoo()
    {
        _enclosures = new List<Enclosure>
        {
            new Enclosure(new Sign("Львы", "Рычание", "Саванна"), CreateLions(3)),
            new Enclosure(new Sign("Пингвины", "Крики", "Антарктика"), CreatePenguins(10)),
            new Enclosure(new Sign("Обезьяны", "У-у-у-а-а-а!", "Джунгли"), CreateMonkeys(5)),
            new Enclosure(new Sign("Зебры", "Фырканье", "Саванна"), CreateZebras(4))
        };
    }

    private List<Animal> CreateLions(int count)
    {
        var lions = new List<Animal>();

        for (int i = 0; i < count; i++)
        {
            lions.Add(new Animal("Лев", "самец"));
        }

        return lions;
    }

    private List<Animal> CreatePenguins(int count)
    {
        var penguins = new List<Animal>();

        for (int i = 0; i < count; i++)
        {
            string gender = (i % 2 == 0) ? "самец" : "самка";
            penguins.Add(new Animal("Пингвин", gender));
        }

        return penguins;
    }

    private List<Animal> CreateMonkeys(int count)
    {
        var monkeys = new List<Animal>();

        for (int i = 0; i < count; i++)
        {
            string gender = (i % 2 == 0) ? "самец" : "самка";
            monkeys.Add(new Animal("Обезьяна", gender));
        }

        return monkeys;
    }

    private List<Animal> CreateZebras(int count)
    {
        var zebras = new List<Animal>();

        for (int i = 0; i < count; i++)
        {
            zebras.Add(new Animal("Зебра", "самка"));
        }

        return zebras;
    }

    public void Run()
    {
        Console.WriteLine("Добро пожаловать в зоопарк");

        _isRunning = true;

        while (_isRunning)
        {
            ShowMenu();
            HandleInput();
        }

        Console.WriteLine("До свидания");
    }

    private void ShowMenu()
    {
        Console.WriteLine("\nВыберите вольер для просмотра (введите номер):");

        for (int i = 0; i < _enclosures.Count; i++)
        {
            Console.WriteLine($"{i + 1}. {_enclosures[i].Sign.AnimalType}");
        }

        Console.WriteLine($"{CommandExit}. Выход из зоопарка");
    }

    private void HandleInput()
    {
        string input = Console.ReadLine();

        if (input == CommandExit)
        {
            _isRunning = false;
            return;
        }

        if (int.TryParse(input, out int choice) && choice > 0 && choice <= _enclosures.Count)
        {
            _enclosures[choice - 1].DisplayInfo();
        }
        else
        {
            Console.WriteLine("Некорректный ввод. Попробуйте еще раз.");
        }
    }
}

class Enclosure
{
    private List<Animal> _animals;
    private Sign _sign;

    public Enclosure(Sign sign, List<Animal> animals)
    {
        _sign = sign;
        _animals = animals;
    }

    public Sign Sign => _sign;

    public void DisplayInfo()
    {
        Console.WriteLine("\n=== Информация о вольере ===");

        _sign.DisplaySignInfo();

        Console.WriteLine($"Количество животных: {_animals.Count}");
        Console.WriteLine($"Пол животных: {GetGenderDescription()}");
        Console.WriteLine("============================");
    }

    private string GetGenderDescription()
    {
        int males = 0;
        int females = 0;

        foreach (var animal in _animals)
        {
            if (animal.Gender == "самец")
                males++;
            else
                females++;
        }

        if (males > 0 && females > 0)
            return "самцы и самки";
        else if (males > 0)
            return "самцы";
        else
            return "самки";
    }
}

class Sign
{
    private string _animalType;
    private string _animalSound;
    private string _habitat;

    public Sign(string animalType, string animalSound, string habitat)
    {
        _animalType = animalType;
        _animalSound = animalSound;
        _habitat = habitat;
    }

    public string AnimalType => _animalType;

    public void DisplaySignInfo()
    {
        Console.WriteLine($"Тип животных: {_animalType}");
        Console.WriteLine($"Среда обитания: {_habitat}");
        Console.WriteLine($"Звук: {_animalSound}");
    }
}

class Animal
{
    public Animal(string species, string gender)
    {
        Species = species;
        Gender = gender;
    }

    public string Species { get; }
    public string Gender { get; }
}
