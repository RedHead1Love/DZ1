using System;
using System.Collections.Generic;

class Program
{
    static void Main()
    {
        const string CommandAddEmployee = "1";
        const string CommandRemoveEmployee = "2";
        const string CommandShowAllEmployees = "3";
        const string CommandExit = "4";

        Dictionary<string, List<string>> employeesByPosition = new Dictionary<string, List<string>>();
        bool isRunning = true;

        while (isRunning)
        {
            Console.WriteLine("\nМеню:");
            Console.WriteLine($"{CommandAddEmployee}. Добавить сотрудника");
            Console.WriteLine($"{CommandRemoveEmployee}. Удалить сотрудника");
            Console.WriteLine($"{CommandShowAllEmployees}. Показать всех сотрудников");
            Console.WriteLine($"{CommandExit}. Выйти");
            Console.Write("Выберите действие: ");

            string input = Console.ReadLine();

            switch (input)
            {
                case CommandAddEmployee:
                    AddEmployee(employeesByPosition);
                    break;

                case CommandRemoveEmployee:
                    RemoveEmployee(employeesByPosition);
                    break;

                case CommandShowAllEmployees:
                    DisplayAllEmployees(employeesByPosition);
                    break;

                case CommandExit:
                    isRunning = false;
                    break;

                default:
                    Console.WriteLine("Неверный ввод");
                    break;
            }
        }
    }

    static void AddEmployee(Dictionary<string, List<string>> employeesByPosition)
    {
        Console.Write("Введите должность: ");
        string position = Console.ReadLine();

        Console.Write("Введите ФИО сотрудника: ");
        string name = Console.ReadLine();

        if (employeesByPosition.ContainsKey(position) == false)
        {
            employeesByPosition[position] = new List<string>();
        }

        employeesByPosition[position].Add(name);
        Console.WriteLine($"Сотрудник {name} добавлен на должность {position}.");
    }

    static void RemoveEmployee(Dictionary<string, List<string>> employeesByPosition)
    {
        if (employeesByPosition.Count == 0)
        {
            Console.WriteLine("Нет данных о сотрудниках");
            return;
        }

        Console.WriteLine("Выберите должность:");

        int positionNumber = 1;
        var positions = new List<string>(employeesByPosition.Keys);

        foreach (var position in positions)
        {
            Console.WriteLine($"{positionNumber}. {position}");
            positionNumber++;
        }

        if (int.TryParse(Console.ReadLine(), out int selectedPositionNumber) &&
            selectedPositionNumber > 0 && selectedPositionNumber <= positions.Count)
        {
            string selectedPosition = positions[selectedPositionNumber - 1];
            var employeesInPosition = employeesByPosition[selectedPosition];

            Console.WriteLine("Выберите сотрудника для удаления:");

            for (int i = 0; i < employeesInPosition.Count; i++)
            {
                Console.WriteLine($"{i + 1}. {employeesInPosition[i]}");
            }

            if (int.TryParse(Console.ReadLine(), out int selectedEmployeeNumber) &&
                selectedEmployeeNumber > 0 && selectedEmployeeNumber <= employeesInPosition.Count)
            {
                int employeeIndex = selectedEmployeeNumber - 1;
                string removedEmployee = employeesInPosition[employeeIndex];
                employeesInPosition.RemoveAt(employeeIndex);
                Console.WriteLine($"Сотрудник {removedEmployee} удалён с должности {selectedPosition}.");

                if (employeesInPosition.Count == 0)
                {
                    employeesByPosition.Remove(selectedPosition);
                    Console.WriteLine($"Должность {selectedPosition} удалена, так как в ней не осталось сотрудников.");
                }
            }
            else
            {
                Console.WriteLine("Неверный номер сотрудника");
            }
        }
        else
        {
            Console.WriteLine("Неверный номер должности");
        }
    }

    static void DisplayAllEmployees(Dictionary<string, List<string>> employeesByPosition)
    {
        if (employeesByPosition.Count == 0)
        {
            Console.WriteLine("Нет данных о сотрудниках");
            return;
        }

        foreach (var position in employeesByPosition)
        {
            Console.WriteLine($"\nДолжность: {position.Key}");
            Console.WriteLine("Сотрудники:");

            foreach (var employee in position.Value)
            {
                Console.WriteLine($"- {employee}");
            }
        }
    }
}
