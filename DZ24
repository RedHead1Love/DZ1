using System;

namespace BossFight
{
    class Program
    {
        static void Main(string[] args)
        {
            const string CommandThrowsNormalPunch = "1";
            const string CommandUseFireball = "2";
            const string CommandUseExplosion = "3";
            const string CommandUsePotion = "4";

            int heroHealth = 100;
            int heroMaxHealth = 100;
            int heroMana = 50;
            int heroMaxMana = 50;
            int heroHealsLeft = 3;

            int normalAttackMinDamage = 5;
            int normalAttackMaxDamage = 15;
            int fireballCost = 15;
            int fireballMinDamage = 20;
            int fireballMaxDamage = 30;
            int explosionMinDamage = 30;
            int explosionMaxDamage = 50;
            int healHpAmount = 30;
            int healMpAmount = 20;

            int bossHealth = 150;
            int bossMinDamage = 10;
            int bossMaxDamage = 20;

            Random random = new Random();
            int bossAttack = random.Next(bossMinDamage, bossMaxDamage + 1);
            bool isFireballUsed = false;

            Console.WriteLine("Битва с боссом началась");

            while (heroHealth > 0 && bossHealth > 0)
            {
                Console.WriteLine("\nВыберите действие:");
                Console.WriteLine($"{CommandThrowsNormalPunch} - Обычная атака");
                Console.WriteLine($"{CommandUseFireball} - Огненный шар ({fireballCost} мана)");
                Console.WriteLine($"{CommandUseExplosion} - Взрыв (только после огненного шара)");
                Console.WriteLine($"{CommandUsePotion} - Зелье (восстанавливает {healHpAmount} здоровья и {healMpAmount} маны)");
                Console.WriteLine($"\nГерой: здоровье {heroHealth}/{heroMaxHealth}, мана {heroMana}/{heroMaxMana}, зелья {heroHealsLeft}");
                Console.WriteLine($"Босс: здоровье {bossHealth}");

                string choice = Console.ReadLine();

                switch (choice)
                {
                    case CommandThrowsNormalPunch:
                        int normalDamage = random.Next(normalAttackMinDamage, normalAttackMaxDamage + 1);
                        bossHealth -= normalDamage;

                        Console.WriteLine($"Герой наносит обычную атаку и наносит {normalDamage} урона");
                        break;

                    case CommandUseFireball:
                        if (heroMana >= fireballCost)
                        {
                            int fireDamage = random.Next(fireballMinDamage, fireballMaxDamage + 1);
                            bossHealth -= fireDamage;
                            heroMana -= fireballCost;
                            isFireballUsed = true;

                            Console.WriteLine($"Герой использует огненный шар и наносит {fireDamage} урона");
                        }
                        else
                        {
                            Console.WriteLine("Недостаточно маны, герой пропускает ход");
                        }
                        break;

                    case CommandUseExplosion:
                        if (isFireballUsed)
                        {
                            int explosionDamage = random.Next(explosionMinDamage, explosionMaxDamage + 1);
                            bossHealth -= explosionDamage;
                            isFireballUsed = false;

                            Console.WriteLine($"Герой использует взрыв и наносит {explosionDamage} урона");
                        }
                        else
                        {
                            Console.WriteLine("Сначала нужно использовать огненный шар, герой пропускает ход");
                        }
                        break;

                    case CommandUsePotion:
                        if (heroHealsLeft > 0)
                        {
                            heroHealth = Math.Min(heroHealth + healHpAmount, heroMaxHealth);
                            heroMana = Math.Min(heroMana + healMpAmount, heroMaxMana);
                            heroHealsLeft--;

                            Console.WriteLine($"Герой использует зелье и восстанавливает {healHpAmount} здоровья и {healMpAmount} маны");
                        }
                        else
                        {
                            Console.WriteLine("Закончились зелья, герой пропускает ход.");
                        }
                        break;

                    default:
                        Console.WriteLine("Неверный ввод, герой пропускает ход.");
                        break;
                }

                if (bossHealth > 0)
                {
                    int bossDamage = random.Next(bossMinDamage, bossMaxDamage + 1);
                    heroHealth -= bossDamage;

                    Console.WriteLine($"Босс атакует и наносит {bossDamage} урона");
                }
            }

            if (heroHealth <= 0 && bossHealth <= 0)
            {
                Console.WriteLine("\nНичья, оба погибли");
            }
            else if (bossHealth <= 0)
            {
                Console.WriteLine("\nПобеда");
            }
            else
            {
                Console.WriteLine("\nПоражение");
            }

            Console.WriteLine("\nИгра окончена. Нажмите любую клавишу для выхода");
            Console.ReadKey();
        }
    }
}
